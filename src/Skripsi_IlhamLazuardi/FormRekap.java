/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Skripsi_IlhamLazuardi;

import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.HashMap;
import static java.util.Objects.hash;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.Query;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.digester.Digester;
/**
 *
 * @author Lazuardi
 */
public class FormRekap extends javax.swing.JFrame {
        
    Connection koneksi;
    ResultSet hasil;
    PreparedStatement proses;
    /**
     * Creates new form FormRekap
     */
    public FormRekap() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(dim.width,dim.height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnSatuan = new javax.swing.JButton();
        btnKiloan = new javax.swing.JButton();
        txtKeuntungan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelRekap = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtTanggaldari = new com.toedter.calendar.JDateChooser();
        txtTanggalke = new com.toedter.calendar.JDateChooser();
        cetakPrint = new javax.swing.JScrollPane();
        BtnSetrika = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REKAP");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\LOGO BJ 100x100.png")); // NOI18N
        jLabel9.setText("REKAP");

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\Icon cari 20x20.png")); // NOI18N
        jLabel1.setText("Cari Tanggal");

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\Icon kembali ke menu 20x20.png")); // NOI18N
        jButton2.setText("Kembali Ke Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSatuan.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\icon laundry 20x20.png")); // NOI18N
        btnSatuan.setText("Cuci Satuan");
        btnSatuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSatuanActionPerformed(evt);
            }
        });

        btnKiloan.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\icon laundry 20x20.png")); // NOI18N
        btnKiloan.setText("Cuci Kiloan");
        btnKiloan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiloanActionPerformed(evt);
            }
        });

        txtKeuntungan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeuntunganActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\icon keuntungan 20x20.png")); // NOI18N
        jLabel2.setText("Total :");

        tabelRekap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tabelRekap);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel3.setText("Ke");

        txtTanggaldari.setDateFormatString("yyyy-MM-dd");

        txtTanggalke.setDateFormatString("yyyy-MM-dd");

        BtnSetrika.setIcon(new javax.swing.ImageIcon("C:\\Users\\Lazuardi\\Documents\\NetBeansProjects\\Skripsi_IlhamLazuardi\\Icon\\icon setrika 20x20.png")); // NOI18N
        BtnSetrika.setText("Setrika");
        BtnSetrika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSetrikaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cetakPrint)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKeuntungan, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTanggaldari, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTanggalke, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSatuan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnKiloan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnSetrika)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(btnSatuan)
                                .addComponent(btnKiloan)
                                .addComponent(jLabel3)
                                .addComponent(BtnSetrika, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTanggalke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtKeuntungan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addComponent(txtTanggaldari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cetakPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void cucisatuancetak(){
       koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
       
       try{
       SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
       String Dari = dateFormat.format(txtTanggaldari.getDate());
       String Ke = dateFormat.format(txtTanggalke.getDate());
       
       HashMap parameter = new HashMap();
       parameter.put("Start",txtTanggaldari.getDate());
       parameter.put("End",txtTanggalke.getDate());
       
       
       JasperPrint jasperprint = JasperFillManager.fillReport("src/Laporan/cucisatuan.jasper", parameter , koneksi);
       JRViewer jasperViewer = new JRViewer(jasperprint);
       jasperViewer.setOpaque(true);
       jasperViewer.setVisible(true);
       cetakPrint.add(jasperViewer);
       cetakPrint.setViewportView(jasperViewer);
       
       
       } catch(Exception e) {
           JOptionPane.showMessageDialog(null, "DATA TIDAK ADA!");
           JOptionPane.showMessageDialog(null, "SILAHKAN MASUKKAN TANGGAL!");
       }
   }
    private void CetakSetrika(){
       koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
       
       try{
       SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
       String Dari = dateFormat.format(txtTanggaldari.getDate());
       String Ke = dateFormat.format(txtTanggalke.getDate());
       
       HashMap parameter = new HashMap();
       parameter.put("Start",Dari);
       parameter.put("End",Ke);
       
       JasperPrint jasperprint = JasperFillManager.fillReport("src/Laporan/setrika.jasper", parameter , koneksi);
       JRViewer jasperViewer = new JRViewer(jasperprint);
       jasperViewer.setOpaque(true);
       jasperViewer.setVisible(true);
       cetakPrint.add(jasperViewer);
       cetakPrint.setViewportView(jasperViewer);
       
       
       } catch(Exception e) {
           JOptionPane.showMessageDialog(null, "DATA TIDAK ADA!");
           JOptionPane.showMessageDialog(null, "SILAHKAN MASUKKAN TANGGAL!");
       }
   }
    private void cucikiloancetak(){
       koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
        
       
       try{
       SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
       String Dari = dateFormat.format(txtTanggaldari.getDate());
       String Ke = dateFormat.format(txtTanggalke.getDate());
       
       HashMap parameter = new HashMap();
       parameter.put("Start",txtTanggaldari.getDate());
       parameter.put("End",txtTanggalke.getDate());
       
       
       JasperPrint jasperprint = JasperFillManager.fillReport("src/Laporan/cucikiloan.jasper", parameter , koneksi);
       JRViewer jasperViewer = new JRViewer(jasperprint);
       jasperViewer.setOpaque(true);
       jasperViewer.setVisible(true);
       cetakPrint.add(jasperViewer);
       cetakPrint.setViewportView(jasperViewer);
       
       
       } catch(Exception e) {
           JOptionPane.showMessageDialog(null, "DATA TIDAK ADA!");
           JOptionPane.showMessageDialog(null, "SILAHKAN MASUKKAN TANGGAL!");
       }
   }
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new FormUtama().setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed
    private void totalKiloan(){
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());   
    
     try{
            String sql = "SELECT SUM(TotalHarga) FROM dbcucikiloan WHERE dbcucikiloan.ID_CuciKiloan AND dbcucikiloan.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"' ORDER BY Kodebon DESC";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                txtKeuntungan.setText(hasil.getString(1));
                
                }
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
    }
    private void RekapKiloan () {
        
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Bon");
    model.addColumn("Cuci Kiloan");
    model.addColumn("Tanggal");
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());
    
    try{
            String sql = "SELECT dbcucikiloan.Kodebon, dbcucikiloan.TotalHarga ,dbcucikiloan.Tanggal FROM dbcucikiloan WHERE dbcucikiloan.ID_CuciKiloan AND dbcucikiloan.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"' ORDER BY Kodebon ASC";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                model.addRow(new Object[]{hasil.getString(1),hasil.getString(2),hasil.getString(3)});
                
                }
            tabelRekap.setModel(model);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
}
    private void rekapSatuan(){
    
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Bon");
    model.addColumn("Cuci Satuan");
    model.addColumn("Tanggal");
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());
    int var =1;
    try{
            String sql = "SELECT dbcucisatuan.Kodebon, dbcucisatuan.TotalHarga ,dbcucisatuan.Tanggal FROM dbcucisatuan WHERE dbcucisatuan.ID_CuciSatuan AND dbcucisatuan.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"'";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                model.addRow(new Object[]{hasil.getString(1),hasil.getString(2),hasil.getString(3)});
                
                }
            tabelRekap.setModel(model);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
    }
    
    private void totalSatuan(){
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());   
    
     try{
            String sql = "SELECT SUM(TotalHarga) FROM dbcucisatuan WHERE dbcucisatuan.ID_CuciSatuan AND dbcucisatuan.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"'";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                txtKeuntungan.setText(hasil.getString(1));
                
                }
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
    
    }
    
    private void rekapSetrika(){
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Bon");
    model.addColumn("Setrika");
    model.addColumn("Tanggal");
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());
    try{
            String sql = "SELECT dbsetrika.Kodebon ,dbsetrika.TotalHarga , dbsetrika.Tanggal FROM dbsetrika WHERE dbsetrika.ID_Setrika AND dbsetrika.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"' ORDER BY Tanggal ASC";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                model.addRow(new Object[]{hasil.getString(1),hasil.getString(2),hasil.getString(3)});
                
                }
            tabelRekap.setModel(model);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
    
    }
    
    private void totalsetrika(){
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String Dari = dateFormat.format(txtTanggaldari.getDate());
    String Ke = dateFormat.format(txtTanggalke.getDate());   
    
     try{
            String sql = "SELECT SUM(TotalHarga) FROM dbsetrika WHERE dbsetrika.ID_Setrika AND dbsetrika.Tanggal BETWEEN '"+Dari+"' AND '"+Ke+"'";
            koneksi = Skripsi_IlhamLazuardi.KoneksiDB.ConnectDb();
            proses = koneksi.prepareStatement(sql);
            hasil = proses.executeQuery(sql);
            while(hasil.next()){
                txtKeuntungan.setText(hasil.getString(1));
                
                }
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "GAGAL KONEKSI!");
        }
    
    }
    
    private void btnSatuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSatuanActionPerformed
        // TODO add your handling code here:
        cucisatuancetak();
        totalSatuan();
        rekapSatuan();
        
    }//GEN-LAST:event_btnSatuanActionPerformed

    private void btnKiloanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiloanActionPerformed
        // TODO add your handling code here:
        cucikiloancetak();
        totalKiloan();
        RekapKiloan();
        
    }//GEN-LAST:event_btnKiloanActionPerformed

    private void txtKeuntunganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeuntunganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeuntunganActionPerformed

    private void BtnSetrikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSetrikaActionPerformed
        // TODO add your handling code here:
        CetakSetrika();
        totalsetrika();
        rekapSetrika();
        
    }//GEN-LAST:event_BtnSetrikaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRekap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRekap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRekap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRekap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRekap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSetrika;
    private javax.swing.JButton btnKiloan;
    private javax.swing.JButton btnSatuan;
    private javax.swing.JScrollPane cetakPrint;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelRekap;
    private javax.swing.JTextField txtKeuntungan;
    private com.toedter.calendar.JDateChooser txtTanggaldari;
    private com.toedter.calendar.JDateChooser txtTanggalke;
    // End of variables declaration//GEN-END:variables

    private JasperReport JasperCompileReport(JasperDesign JD) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
